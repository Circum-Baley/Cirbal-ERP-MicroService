spring.application.name=service-users
server.port=${PORT:0}

eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true
#eureka.instance.preferIpAddress=true
#Se elimina la lista de servidores ya que Eureka se encargara de ello
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.instance-id=${spring.application.name}:${spring.application.instance_id:${random.value}}

#Vizualizacion de las consultas sql nativas (query native)
logging.level.org.hibernate.SQL=debug

spring.datasource.driverClassName=org.h2.Driver

#Crea Y Borra la base de datos cuando se 	reinicia la aplicacion en el servidor generalmente utilizada para la unida de testeo.
spring.jpa.hibernate.ddl-auto=create-drop

#se dejara operativa la linea de abajo para que se pueda actualizar junto con las restricciones de la base de datos.
#spring.jpa.hibernate.ddl-auto=update
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.datasource.url=jdbc:h2:mem:login_crud:DB_CLOSE_ON_EXIT=FALSE

# Recordar que <prometheus> se diferencia en dependencia con ACTUATOR
#management.endpoints.web.exposure.include=health,info,metrics,prometheus
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.H2Dialect

spring.jpa.database-platform=org.hibernate.dialect.H2Dialect